{"version":3,"file":"iwc-comment-template/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAkE;AACtB;AACwB;AACtB;AACF;;AAE5C;AACA,MAAMQ,qBAAqB,GAAG,GAAG;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,mBAAmB,GAAGC,IAAA,IAAkB;EAAA,IAAhB;IAAEC;EAAO,CAAC,GAAAD,IAAA;EAC9C;EACA,MAAME,SAAS,GAAG;IACjBC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,OAAO;IAChBC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE;EACT,CAAC;;EAED;EACA,MAAM;IACLC,YAAY;IACZC,eAAe;IACfC,mBAAmB,EAAEC;EACtB,CAAC,GAAGlB,0DAAS,CAAImB,MAAM,IAAM;IAC5B,MAAM;MAAEC;IAAY,CAAC,GAAGD,MAAM,CAAEjB,0DAAgB,CAAE;IAClD,MAAM;MAAEmB;IAAiC,CAAC,GAAGD,WAAW,EAAE;IAC1D,OAAOC,gCAAgC;EACxC,CAAC,CAAE;;EAEH;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAGP,YAAY,GACzBQ,IAAI,CAACC,GAAG,CAAER,eAAe,EAAEX,qBAAqB,CAAE,GAClDA,qBAAqB;;EAExB;EACA,MAAMoB,IAAI,GAAGC,mBAAmB,CAAE;IACjCR,WAAW;IACXV,MAAM;IACNc,OAAO;IACPb;EACD,CAAC,CAAE;;EAEH;EACA;EACA,OAAOV,2DAAO,CAAE,MAAM;IACrB,OAAO0B,IAAI,GACR;MACA,GAAGhB,SAAS;MACZkB,IAAI,EAAEnB,MAAM;MACZoB,QAAQ,EAAEN,OAAO;MACjBG;IACA,CAAC,GACD,IAAI;EACR,CAAC,EAAE,CAAEjB,MAAM,EAAEc,OAAO,EAAEG,IAAI,CAAE,CAAE;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGG,KAAA,IAAmD;EAAA,IAAjD;IAAEX,WAAW;IAAEV,MAAM;IAAEc,OAAO;IAAEb;EAAU,CAAC,GAAAoB,KAAA;EACxE;EACA,MAAM,CAAEC,YAAY,EAAEC,eAAe,CAAE,GAAGlC,4DAAQ,CAAE,CAAC,CAAC,CAAE;EACxD,MAAMmC,GAAG,GAAI,GAAGxB,MAAQ,IAAIc,OAAS,EAAC;EACtC,MAAMG,IAAI,GAAGK,YAAY,CAAEE,GAAG,CAAE,IAAI,CAAC;EAErClC,6DAAS,CAAE,MAAM;IAChB;IACA,IAAK2B,IAAI,IAAIP,WAAW,KAAK,QAAQ,EAAG;MACvC;IACD;IACA;IACA;IACAd,2DAAQ,CAAE;MACT6B,IAAI,EAAE9B,4DAAY,CAAE,iBAAiB,EAAE;QACtC,GAAGM,SAAS;QACZkB,IAAI,EAAEnB,MAAM;QACZoB,QAAQ,EAAEN,OAAO;QACjBY,OAAO,EAAE;MACV,CAAC,CAAE;MACHC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE;IACR,CAAC,CAAE,CAACC,IAAI,CAAIC,GAAG,IAAM;MACpB,MAAMC,KAAK,GAAGC,QAAQ,CAAEF,GAAG,CAACG,OAAO,CAACC,GAAG,CAAE,iBAAiB,CAAE,CAAE;MAC9DX,eAAe,CAAE;QAChB,GAAGD,YAAY;QACf,CAAEE,GAAG,GAAIO,KAAK,IAAI,CAAC,GAAG,CAAC,GAAGA,KAAK,CAAE;MAClC,CAAC,CAAE;IACJ,CAAC,CAAE;EACJ,CAAC,EAAE,CAAErB,WAAW,EAAEV,MAAM,EAAEc,OAAO,EAAES,eAAe,CAAE,CAAE;;EAEtD;EACA,OAAOb,WAAW,KAAK,QAAQ,GAAGO,IAAI,GAAG,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMkB,cAAc,GAAKC,gBAAgB,IAAM;EACrD,MAAMC,WAAW,GAAG9C,2DAAO,CAC1B,MACC6C,gBAAgB,EAAEE,GAAG,CAAEC,KAAA,IAAyB;IAAA,IAAvB;MAAEC,EAAE;MAAEC;IAAU,CAAC,GAAAF,KAAA;IACzC,MAAM,CAAEG,QAAQ,CAAE,GAAGD,SAAS,EAAEC,QAAQ,IAAI,CAAE,EAAE,CAAE;IAClD,OAAO;MACNC,SAAS,EAAEH,EAAE;MACbE,QAAQ,EAAEA,QAAQ,CAACJ,GAAG,CAAIM,KAAK,KAAQ;QACtCD,SAAS,EAAEC,KAAK,CAACJ;MAClB,CAAC,CAAE;IACJ,CAAC;EACF,CAAC,CAAE,EACJ,CAAEJ,gBAAgB,CAAE,CACpB;EAED,OAAOC,WAAW;AACnB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChJmD;AACR;AACP;AAOJ;AACe;AACU;AAEI;AAE9D,MAAMiB,QAAQ,GAAG,CAChB,CAAE,uBAAuB,CAAE,EAC3B,CAAE,0BAA0B,CAAE,EAC9B,CAAE,mBAAmB,CAAE,EACvB,CAAE,sBAAsB,CAAE,EAC1B,CAAE,yBAAyB,CAAE,EAC7B,CAAE,wBAAwB,CAAE,CAC5B;AAED,MAAMC,sBAAsB,GAAGxD,IAAA,IAKxB;EAAA,IAL0B;IAChCe,OAAO;IACPP,YAAY;IACZiD,cAAc;IACdC;EACD,CAAC,GAAA1D,IAAA;EAEA,MAAM2D,aAAa,GAAG,CAAEF,cAAc,GAAG,CAAC,GAAGzC,IAAI,CAACC,GAAG,CAAEyC,mBAAmB,EAAE,CAAC,CAAE;EAE/E,MAAME,oBAAoB,GAAKC,aAAa,IAAM;IACjD,IAAKA,aAAa,GAAGF,aAAa,EAAG;MACpC,MAAMG,SAAS,GAAGD,aAAa,GAAG,CAAC;MACnC,OAAO,CACN;QACCjB,SAAS,EAAE,EAAGiB,aAAa,GAAG,CAAC,CAAE;QACjClB,QAAQ,EAAEiB,oBAAoB,CAAEE,SAAS;MAC1C,CAAC,CACD;IACF;IACA,OAAO,EAAE;EACV,CAAC;EAED,MAAMC,mBAAmB,GAAG,CAC3B;IAAEnB,SAAS,EAAE,CAAC,CAAC;IAAED,QAAQ,EAAEiB,oBAAoB,CAAE,CAAC;EAAG,CAAC,CACtD;EAED,IAAK,CAAE,CAAEpD,YAAY,IAAIO,OAAO,IAAI,CAAC,KAAM4C,aAAa,GAAG,CAAC,EAAG;IAC9DI,mBAAmB,CAACC,IAAI,CAAE;MACzBpB,SAAS,EAAE,CAAC,CAAC;MACbD,QAAQ,EAAE;IACX,CAAC,CAAE;EACJ;EAEA,IAAK,CAAE,CAAEnC,YAAY,IAAIO,OAAO,IAAI,CAAC,KAAM4C,aAAa,GAAG,CAAC,EAAG;IAC9DI,mBAAmB,CAACC,IAAI,CAAE;MACzBpB,SAAS,EAAE,CAAC,CAAC;MACbD,QAAQ,EAAE;IACX,CAAC,CAAE;EACJ;EAEA,OAAOoB,mBAAmB;AAC3B,CAAC;AAED,SAASE,0BAA0BA,CAAA3C,KAAA,EAM/B;EAAA,IANiC;IACpC4C,OAAO;IACPC,eAAe;IACfC,kBAAkB;IAClBC,cAAc;IACdC;EACD,CAAC,GAAAhD,KAAA;EACA,MAAM;IAAEqB,QAAQ;IAAE,GAAG4B;EAAiB,CAAC,GAAGrB,4EAAmB,CAC5D,CAAC,CAAC,EACF;IAAEsB,QAAQ,EAAEjB;EAAS,CAAC,CACtB;EAED,OACCkB,iEAAA,OAASF,gBAAgB,EACtBL,OAAO,CAACtB,SAAS,MAAOuB,eAAe,IAAIE,cAAc,CAAE,GAC1D1B,QAAQ,GACR,IAAI,EAQP8B,iEAAA,CAACC,8BAA8B;IAC9BJ,MAAM,EAAGA,MAAQ;IACjB1B,SAAS,EAAGsB,OAAO,CAACtB,SAAW;IAC/BwB,kBAAkB,EAAGA,kBAAoB;IACzCO,QAAQ,EACPT,OAAO,CAACtB,SAAS,MAAOuB,eAAe,IAAIE,cAAc;EACzD,EACA,EAEAH,OAAO,EAAEvB,QAAQ,EAAEiC,MAAM,GAAG,CAAC,GAC9BH,iEAAA,CAACI,YAAY;IACZC,QAAQ,EAAGZ,OAAO,CAACvB,QAAU;IAC7BwB,eAAe,EAAGA,eAAiB;IACnCC,kBAAkB,EAAGA,kBAAoB;IACzCE,MAAM,EAAGA,MAAQ;IACjBD,cAAc,EAAGA;EAAgB,EAChC,GACC,IAAI,CACJ;AAEP;AAEA,MAAMU,sBAAsB,GAAGvC,KAAA,IAKxB;EAAA,IAL0B;IAChC8B,MAAM;IACN1B,SAAS;IACTwB,kBAAkB;IAClBO;EACD,CAAC,GAAAnC,KAAA;EACA,MAAMwC,iBAAiB,GAAG5B,sFAAe,CAAE;IAC1CkB;EACD,CAAC,CAAE;EAEH,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC3Bb,kBAAkB,CAAExB,SAAS,CAAE;EAChC,CAAC;EAED,MAAMsC,KAAK,GAAG;IACbC,OAAO,EAAER,QAAQ,GAAG,MAAM,GAAGS;EAC9B,CAAC;EAED,OACCX,iEAAA,QAAAY,0EAAA,KACML,iBAAiB;IACtBM,QAAQ,EAAG,CAAG;IACdC,IAAI,EAAC,QAAQ;IACbL,KAAK,EAAGA;IACR;IAAA;IACAM,OAAO,EAAGP,aAAe;IACzBQ,UAAU,EAAGR;EAAe,GAC3B;AAEJ,CAAC;AAED,MAAMP,8BAA8B,GAAG5B,wDAAI,CAAEiC,sBAAsB,CAAE;AAErE,MAAMF,YAAY,GAAGa,KAAA;EAAA,IAAE;IACtBZ,QAAQ;IACRa,UAAU;IACVxB,eAAe;IACfC,kBAAkB;IAClBE,MAAM;IACND;EACD,CAAC,GAAAqB,KAAA;EAAA,OACAjB,iEAAA,OAASkB,UAAU,EAChBb,QAAQ,IACTA,QAAQ,CAACvC,GAAG,CAAE,CAAAqD,KAAA,EAA6BC,KAAK;IAAA,IAAhC;MAAEjD,SAAS;MAAE,GAAGsB;IAAQ,CAAC,GAAA0B,KAAA;IAAA,OACxCnB,iEAAA,CAACzB,yEAAoB;MACpBvB,GAAG,EAAGyC,OAAO,CAACtB,SAAS,IAAIiD,KAAO;MAClCC,KAAK,EAAG;QACPlD,SAAS,EAAEA,SAAS,GAAG,CAAC,GAAG,IAAI,GAAGA;MACnC;IAAG,GAEH6B,iEAAA,CAACR,0BAA0B;MAC1BC,OAAO,EAAG;QAAEtB,SAAS;QAAE,GAAGsB;MAAQ,CAAG;MACrCC,eAAe,EAAGA,eAAiB;MACnCC,kBAAkB,EAAGA,kBAAoB;MACzCE,MAAM,EAAGA,MAAQ;MACjBD,cAAc,EAAGA;IAAgB,EAChC,CACoB;EAAA,CACvB,CAAE,CACA;AAAA,CACL;AAEc,SAAS0B,mBAAmBA,CAAAC,KAAA,EAGvC;EAAA,IAHyC;IAC5CC,QAAQ;IACR5F,OAAO,EAAE;MAAEJ;IAAO;EACnB,CAAC,GAAA+F,KAAA;EACA,MAAML,UAAU,GAAG1C,sEAAa,EAAE;EAElC,MAAM,CAAEkB,eAAe,EAAEC,kBAAkB,CAAE,GAAG9E,4DAAQ,EAAE;EAC1D,MAAM;IACL4G,YAAY;IACZxC,mBAAmB;IACnBD,cAAc;IACdhD,eAAe;IACfD;EACD,CAAC,GAAGf,0DAAS,CAAImB,MAAM,IAAM;IAC5B,MAAM;MAAEC;IAAY,CAAC,GAAGD,MAAM,CAAEjB,0DAAgB,CAAE;IAClD,OAAOkB,WAAW,EAAE,CAACC,gCAAgC;EACtD,CAAC,CAAE;EAEH,MAAMqF,YAAY,GAAGpG,2DAAmB,CAAE;IACzCE;EACD,CAAC,CAAE;EAEH,MAAM;IAAEoC,gBAAgB;IAAEiC;EAAO,CAAC,GAAG7E,0DAAS,CAC3CmB,MAAM,IAAM;IACb,MAAM;MAAEwF;IAAiB,CAAC,GAAGxF,MAAM,CAAE0C,uDAAS,CAAE;IAChD,MAAM;MAAE+C;IAAU,CAAC,GAAGzF,MAAM,CAAEjB,0DAAgB,CAAE;IAChD,OAAO;MACN0C,gBAAgB,EAAE8D,YAAY,GAC3BC,gBAAgB,CAAE,MAAM,EAAE,SAAS,EAAED,YAAY,CAAE,GACnD,IAAI;MACP7B,MAAM,EAAE+B,SAAS,CAAEJ,QAAQ;IAC5B,CAAC;EACF,CAAC,EACD,CAAEA,QAAQ,EAAEE,YAAY,CAAE,CAC1B;EAED,IAAI7D,WAAW,GAAGF,sDAAc,CAC/B8D,YAAY,KAAK,MAAM,IAAI7D,gBAAgB,GACxC,CAAE,GAAGA,gBAAgB,CAAE,CAACiE,OAAO,EAAE,GACjCjE,gBAAgB,CACnB;EAED,IAAK,CAAEA,gBAAgB,EAAG;IACzB,OACCoC,iEAAA,MAAQkB,UAAU,EACjBlB,iEAAA,CAACpB,0DAAO,OAAG,CACR;EAEN;EAEA,IAAK,CAAEpD,MAAM,EAAG;IACfqC,WAAW,GAAGkB,sBAAsB,CAAE;MACrCzC,OAAO,EAAEN,eAAe;MACxBD,YAAY;MACZiD,cAAc;MACdC;IACD,CAAC,CAAE;EACJ;EAEA,IAAK,CAAEpB,WAAW,CAACsC,MAAM,EAAG;IAC3B,OAAOH,iEAAA,MAAQkB,UAAU,EAAK5C,mDAAE,CAAE,mBAAmB,CAAE,CAAM;EAC9D;EAEA,OACC0B,iEAAA,CAACI,YAAY;IACZC,QAAQ,EAAGxC,WAAa;IACxBqD,UAAU,EAAGA,UAAY;IACzBrB,MAAM,EAAGA,MAAQ;IACjBH,eAAe,EAAGA,eAAiB;IACnCC,kBAAkB,EAAGA,kBAAoB;IACzCC,cAAc,EAAG/B,WAAW,CAAE,CAAC,CAAE,EAAEM;EAAW,EAC7C;AAEJ;;;;;;;;;;;;;;;;;;;ACxPsD;AAEvC,SAAS4D,IAAIA,CAAA,EAAG;EAC9B,OAAO/B,iEAAA,CAAC8B,wEAAmB,OAAG;AAC/B;;;;;;;;;;ACJA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNsD;AAElB;AAEV;AACA;AAE1BG,oEAAiB,CAAEC,6CAAa,EAAE;EACjCC,IAAI;EACJJ,IAAIA,+CAAAA;AACL,CAAC,CAAE,C","sources":["webpack://iwc-blocks/./src/iwc-comment-template/edit/hooks.js","webpack://iwc-blocks/./src/iwc-comment-template/edit/index.js","webpack://iwc-blocks/./src/iwc-comment-template/save/index.js","webpack://iwc-blocks/external window [\"wp\",\"apiFetch\"]","webpack://iwc-blocks/external window [\"wp\",\"blockEditor\"]","webpack://iwc-blocks/external window [\"wp\",\"blocks\"]","webpack://iwc-blocks/external window [\"wp\",\"components\"]","webpack://iwc-blocks/external window [\"wp\",\"coreData\"]","webpack://iwc-blocks/external window [\"wp\",\"data\"]","webpack://iwc-blocks/external window [\"wp\",\"element\"]","webpack://iwc-blocks/external window [\"wp\",\"i18n\"]","webpack://iwc-blocks/external window [\"wp\",\"url\"]","webpack://iwc-blocks/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://iwc-blocks/webpack/bootstrap","webpack://iwc-blocks/webpack/runtime/compat get default export","webpack://iwc-blocks/webpack/runtime/define property getters","webpack://iwc-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://iwc-blocks/webpack/runtime/make namespace object","webpack://iwc-blocks/./src/iwc-comment-template/index.js"],"sourcesContent":["import { useState, useEffect, useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '@wordpress/api-fetch';\n\n// This is limited by WP REST API\nconst MAX_COMMENTS_PER_PAGE = 100;\n\n/**\n * Return an object with the query args needed to fetch the default page of\n * comments.\n *\n * @param {Object} props        Hook props.\n * @param {number} props.postId ID of the post that contains the comments.\n *                              discussion settings.\n *\n * @return {Object} Query args to retrieve the comments.\n */\nexport const useCommentQueryArgs = ( { postId } ) => {\n\t// Initialize the query args that are not going to change.\n\tconst queryArgs = {\n\t\tstatus: 'approve',\n\t\torder: 'asc',\n\t\tcontext: 'embed',\n\t\tparent: 0,\n\t\t_embed: 'children',\n\t};\n\n\t// Get the Discussion settings that may be needed to query the comments.\n\tconst {\n\t\tpageComments,\n\t\tcommentsPerPage,\n\t\tdefaultCommentsPage: defaultPage,\n\t} = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { __experimentalDiscussionSettings } = getSettings();\n\t\treturn __experimentalDiscussionSettings;\n\t} );\n\n\t// WP REST API doesn't allow fetching more than max items limit set per single page of data.\n\t// As for the editor performance is more important than completeness of data and fetching only the\n\t// max allowed for single page should be enough for the purpose of design and laying out the page.\n\t// Fetching over the limit would return an error here but would work with backend query.\n\tconst perPage = pageComments\n\t\t? Math.min( commentsPerPage, MAX_COMMENTS_PER_PAGE )\n\t\t: MAX_COMMENTS_PER_PAGE;\n\n\t// Get the number of the default page.\n\tconst page = useDefaultPageIndex( {\n\t\tdefaultPage,\n\t\tpostId,\n\t\tperPage,\n\t\tqueryArgs,\n\t} );\n\n\t// Merge, memoize and return all query arguments, unless the default page's\n\t// number is not known yet.\n\treturn useMemo( () => {\n\t\treturn page\n\t\t\t? {\n\t\t\t\t\t...queryArgs,\n\t\t\t\t\tpost: postId,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t\tpage,\n\t\t\t  }\n\t\t\t: null;\n\t}, [ postId, perPage, page ] );\n};\n\n/**\n * Return the index of the default page, depending on whether `defaultPage` is\n * `newest` or `oldest`. In the first case, the only way to know the page's\n * index is by using the `X-WP-TotalPages` header, which forces to make an\n * additional request.\n *\n * @param {Object} props             Hook props.\n * @param {string} props.defaultPage Page shown by default (newest/oldest).\n * @param {number} props.postId      ID of the post that contains the comments.\n * @param {number} props.perPage     The number of comments included per page.\n * @param {Object} props.queryArgs   Other query args.\n *\n * @return {number} Index of the default comments page.\n */\nconst useDefaultPageIndex = ( { defaultPage, postId, perPage, queryArgs } ) => {\n\t// Store the default page indices.\n\tconst [ defaultPages, setDefaultPages ] = useState( {} );\n\tconst key = `${ postId }_${ perPage }`;\n\tconst page = defaultPages[ key ] || 0;\n\n\tuseEffect( () => {\n\t\t// Do nothing if the page is already known or not the newest page.\n\t\tif ( page || defaultPage !== 'newest' ) {\n\t\t\treturn;\n\t\t}\n\t\t// We need to fetch comments to know the index. Use HEAD and limit\n\t\t// fields just to ID, to make this call as light as possible.\n\t\tapiFetch( {\n\t\t\tpath: addQueryArgs( '/wp/v2/comments', {\n\t\t\t\t...queryArgs,\n\t\t\t\tpost: postId,\n\t\t\t\tper_page: perPage,\n\t\t\t\t_fields: 'id',\n\t\t\t} ),\n\t\t\tmethod: 'HEAD',\n\t\t\tparse: false,\n\t\t} ).then( ( res ) => {\n\t\t\tconst pages = parseInt( res.headers.get( 'X-WP-TotalPages' ) );\n\t\t\tsetDefaultPages( {\n\t\t\t\t...defaultPages,\n\t\t\t\t[ key ]: pages <= 1 ? 1 : pages, // If there are 0 pages, it means that there are no comments, but there is no 0th page.\n\t\t\t} );\n\t\t} );\n\t}, [ defaultPage, postId, perPage, setDefaultPages ] );\n\n\t// The oldest one is always the first one.\n\treturn defaultPage === 'newest' ? page : 1;\n};\n\n/**\n * Generate a tree structure of comment IDs from a list of comment entities. The\n * children of each comment are obtained from `_embedded`.\n *\n * @typedef {{ commentId: number, children: CommentNode }} CommentNode\n *\n * @param {Object[]} topLevelComments List of comment entities.\n * @return {{ commentTree: CommentNode[]}} Tree of comment IDs.\n */\nexport const useCommentTree = ( topLevelComments ) => {\n\tconst commentTree = useMemo(\n\t\t() =>\n\t\t\ttopLevelComments?.map( ( { id, _embedded } ) => {\n\t\t\t\tconst [ children ] = _embedded?.children || [ [] ];\n\t\t\t\treturn {\n\t\t\t\t\tcommentId: id,\n\t\t\t\t\tchildren: children.map( ( child ) => ( {\n\t\t\t\t\t\tcommentId: child.id,\n\t\t\t\t\t} ) ),\n\t\t\t\t};\n\t\t\t} ),\n\t\t[ topLevelComments ]\n\t);\n\n\treturn commentTree;\n};\n","import { useState, memo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tBlockContextProvider,\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tstore as blockEditorStore,\n\t__experimentalUseBlockPreview as useBlockPreview,\n} from '@wordpress/block-editor';\nimport { Spinner } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\nimport { useCommentQueryArgs, useCommentTree } from './hooks';\n\nconst TEMPLATE = [\n\t[ 'iwc-blocks/iwc-avatar' ],\n\t[ 'core/comment-author-name' ],\n\t[ 'core/comment-date' ],\n\t[ 'core/comment-content' ],\n\t[ 'core/comment-reply-link' ],\n\t[ 'core/comment-edit-link' ],\n];\n\nconst getCommentsPlaceholder = ( {\n\tperPage,\n\tpageComments,\n\tthreadComments,\n\tthreadCommentsDepth,\n} ) => {\n\n\tconst commentsDepth = ! threadComments ? 1 : Math.min( threadCommentsDepth, 3 );\n\n\tconst buildChildrenComment = ( commentsLevel ) => {\n\t\tif ( commentsLevel < commentsDepth ) {\n\t\t\tconst nextLevel = commentsLevel + 1;\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tcommentId: -( commentsLevel + 3 ),\n\t\t\t\t\tchildren: buildChildrenComment( nextLevel ),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t\treturn [];\n\t};\n\n\tconst placeholderComments = [\n\t\t{ commentId: -1, children: buildChildrenComment( 1 ) },\n\t];\n\n\tif ( ( ! pageComments || perPage >= 2 ) && commentsDepth < 3 ) {\n\t\tplaceholderComments.push( {\n\t\t\tcommentId: -2,\n\t\t\tchildren: [],\n\t\t} );\n\t}\n\n\tif ( ( ! pageComments || perPage >= 3 ) && commentsDepth < 2 ) {\n\t\tplaceholderComments.push( {\n\t\t\tcommentId: -3,\n\t\t\tchildren: [],\n\t\t} );\n\t}\n\n\treturn placeholderComments;\n};\n\nfunction CommentTemplateInnerBlocks( {\n\tcomment,\n\tactiveCommentId,\n\tsetActiveCommentId,\n\tfirstCommentId,\n\tblocks,\n} ) {\n\tconst { children, ...innerBlocksProps } = useInnerBlocksProps(\n\t\t{},\n\t\t{ template: TEMPLATE }\n\t);\n\n\treturn (\n\t\t<li { ...innerBlocksProps }>\n\t\t\t{ comment.commentId === ( activeCommentId || firstCommentId )\n\t\t\t\t? children\n\t\t\t\t: null }\n\n\t\t\t{ /* To avoid flicker when switching active block contexts, a preview\n\t\t\t is ALWAYS rendered and the preview for the active block is hidden.\n\t\t\t This ensures that when switching the active block, the component is not\n\t\t\t mounted again but rather it only toggles the `isHidden` prop.\n\t\t\t The same strategy is used for preventing the flicker in the Post Template\n\t\t\t block. */ }\n\t\t\t<MemoizedCommentTemplatePreview\n\t\t\t\tblocks={ blocks }\n\t\t\t\tcommentId={ comment.commentId }\n\t\t\t\tsetActiveCommentId={ setActiveCommentId }\n\t\t\t\tisHidden={\n\t\t\t\t\tcomment.commentId === ( activeCommentId || firstCommentId )\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t{ comment?.children?.length > 0 ? (\n\t\t\t\t<CommentsList\n\t\t\t\t\tcomments={ comment.children }\n\t\t\t\t\tactiveCommentId={ activeCommentId }\n\t\t\t\t\tsetActiveCommentId={ setActiveCommentId }\n\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\tfirstCommentId={ firstCommentId }\n\t\t\t\t/>\n\t\t\t) : null }\n\t\t</li>\n\t);\n}\n\nconst CommentTemplatePreview = ( {\n\tblocks,\n\tcommentId,\n\tsetActiveCommentId,\n\tisHidden,\n} ) => {\n\tconst blockPreviewProps = useBlockPreview( {\n\t\tblocks,\n\t} );\n\n\tconst handleOnClick = () => {\n\t\tsetActiveCommentId( commentId );\n\t};\n\n\tconst style = {\n\t\tdisplay: isHidden ? 'none' : undefined,\n\t};\n\n\treturn (\n\t\t<div\n\t\t\t{ ...blockPreviewProps }\n\t\t\ttabIndex={ 0 }\n\t\t\trole=\"button\"\n\t\t\tstyle={ style }\n\t\t\t// eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role\n\t\t\tonClick={ handleOnClick }\n\t\t\tonKeyPress={ handleOnClick }\n\t\t/>\n\t);\n};\n\nconst MemoizedCommentTemplatePreview = memo( CommentTemplatePreview );\n\nconst CommentsList = ( {\n\tcomments,\n\tblockProps,\n\tactiveCommentId,\n\tsetActiveCommentId,\n\tblocks,\n\tfirstCommentId,\n} ) => (\n\t<ol { ...blockProps }>\n\t\t{ comments &&\n\t\t\tcomments.map( ( { commentId, ...comment }, index ) => (\n\t\t\t\t<BlockContextProvider\n\t\t\t\t\tkey={ comment.commentId || index }\n\t\t\t\t\tvalue={ {\n\t\t\t\t\t\tcommentId: commentId < 0 ? null : commentId,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<CommentTemplateInnerBlocks\n\t\t\t\t\t\tcomment={ { commentId, ...comment } }\n\t\t\t\t\t\tactiveCommentId={ activeCommentId }\n\t\t\t\t\t\tsetActiveCommentId={ setActiveCommentId }\n\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\tfirstCommentId={ firstCommentId }\n\t\t\t\t\t/>\n\t\t\t\t</BlockContextProvider>\n\t\t\t) ) }\n\t</ol>\n);\n\nexport default function CommentTemplateEdit( {\n\tclientId,\n\tcontext: { postId },\n} ) {\n\tconst blockProps = useBlockProps();\n\n\tconst [ activeCommentId, setActiveCommentId ] = useState();\n\tconst {\n\t\tcommentOrder,\n\t\tthreadCommentsDepth,\n\t\tthreadComments,\n\t\tcommentsPerPage,\n\t\tpageComments,\n\t} = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings().__experimentalDiscussionSettings;\n\t} );\n\n\tconst commentQuery = useCommentQueryArgs( {\n\t\tpostId,\n\t} );\n\n\tconst { topLevelComments, blocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecords } = select( coreStore );\n\t\t\tconst { getBlocks } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\ttopLevelComments: commentQuery\n\t\t\t\t\t? getEntityRecords( 'root', 'comment', commentQuery )\n\t\t\t\t\t: null,\n\t\t\t\tblocks: getBlocks( clientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId, commentQuery ]\n\t);\n\n\tlet commentTree = useCommentTree(\n\t\tcommentOrder === 'desc' && topLevelComments\n\t\t\t? [ ...topLevelComments ].reverse()\n\t\t\t: topLevelComments\n\t);\n\n\tif ( ! topLevelComments ) {\n\t\treturn (\n\t\t\t<p { ...blockProps }>\n\t\t\t\t<Spinner />\n\t\t\t</p>\n\t\t);\n\t}\n\n\tif ( ! postId ) {\n\t\tcommentTree = getCommentsPlaceholder( {\n\t\t\tperPage: commentsPerPage,\n\t\t\tpageComments,\n\t\t\tthreadComments,\n\t\t\tthreadCommentsDepth,\n\t\t} );\n\t}\n\n\tif ( ! commentTree.length ) {\n\t\treturn <p { ...blockProps }>{ __( 'No results found.' ) }</p>;\n\t}\n\n\treturn (\n\t\t<CommentsList\n\t\t\tcomments={ commentTree }\n\t\t\tblockProps={ blockProps }\n\t\t\tblocks={ blocks }\n\t\t\tactiveCommentId={ activeCommentId }\n\t\t\tsetActiveCommentId={ setActiveCommentId }\n\t\t\tfirstCommentId={ commentTree[ 0 ]?.commentId }\n\t\t/>\n\t);\n}\n","import { InnerBlocks } from '@wordpress/block-editor';\n\nexport default function save() {\n\treturn <InnerBlocks.Content />;\n}\n","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"url\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\n\nimport metadata from './block.json';\n\nimport edit from './edit';\nimport save from './save';\n\nregisterBlockType( metadata.name, {\n\tedit,\n\tsave,\n} );\n"],"names":["useState","useEffect","useMemo","useSelect","store","blockEditorStore","addQueryArgs","apiFetch","MAX_COMMENTS_PER_PAGE","useCommentQueryArgs","_ref","postId","queryArgs","status","order","context","parent","_embed","pageComments","commentsPerPage","defaultCommentsPage","defaultPage","select","getSettings","__experimentalDiscussionSettings","perPage","Math","min","page","useDefaultPageIndex","post","per_page","_ref2","defaultPages","setDefaultPages","key","path","_fields","method","parse","then","res","pages","parseInt","headers","get","useCommentTree","topLevelComments","commentTree","map","_ref3","id","_embedded","children","commentId","child","memo","__","BlockContextProvider","useBlockProps","useInnerBlocksProps","__experimentalUseBlockPreview","useBlockPreview","Spinner","coreStore","TEMPLATE","getCommentsPlaceholder","threadComments","threadCommentsDepth","commentsDepth","buildChildrenComment","commentsLevel","nextLevel","placeholderComments","push","CommentTemplateInnerBlocks","comment","activeCommentId","setActiveCommentId","firstCommentId","blocks","innerBlocksProps","template","createElement","MemoizedCommentTemplatePreview","isHidden","length","CommentsList","comments","CommentTemplatePreview","blockPreviewProps","handleOnClick","style","display","undefined","_extends","tabIndex","role","onClick","onKeyPress","_ref4","blockProps","_ref5","index","value","CommentTemplateEdit","_ref6","clientId","commentOrder","commentQuery","getEntityRecords","getBlocks","reverse","InnerBlocks","save","Content","registerBlockType","metadata","edit","name"],"sourceRoot":""}